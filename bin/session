#!/bin/bash

set -e

declare -r envfile='.env'
declare -r docker_namespace='lupusmichaelis'

declare -rA container_name_list=(
	[dev]=wp-nested-cache-dev
	[builder]=wp-nested-cache-builder
);

declare -rA image_name_list=(
	[dev]="$docker_namespace/${container_name_list[dev]}"
	[builder]="$docker_namespace/${container_name_list[builder]}"
);

session-main()
{
	case "$1" in
		init)
			{
				echo LUPUSMICHAELIS_DEV_GID=$(id -g)
				echo LUPUSMICHAELIS_DEV_UID=$(id -u)
				echo LUPUSMICHAELIS_DEV_USER_ALIAS=$(id -un)

				echo BUILD_DOCKER_IMAGE="${image_name_list[builder]}"
				echo DEV_DOCKER_IMAGE="${image_name_list[dev]}"

				echo BUILD_DOCKER_CONTAINER="${container_name_list[builder]}"
				echo DEV_DOCKER_CONTAINER="${container_name_list[dev]}"
			} > "$envfile"
			;;
		release)
			docker build --target release -t "${image_name_list[builder]}" -f Dockerfile .
			docker run \
				--rm --env-file "$envfile" \
				-v$PWD/build:/home/anvil/build \
				"${image_name_list[builder]}"
			;;

		help|--help|-h|'')
			echo "$0"
			cat <<- 'EOS'
			Development session helper
			Anything that's given to this helper will be executed in the developer
			container, to the exception of those shortcuts:

			  init      initialize environment variables                   (no container)
			  release   build the release PHAR file                    (builer container)
			  kill      kill the running development container if any      (no container)
			  php       access to php CLI, subsequent arguments   (development container)
			            will be forwarded to php command
			  help      usage information                                  (no container)
			EOS
			echo
			;;
		*)
			session-docker "$@"
	esac
}

session-docker()
{
	local cid=$(docker ps -qa --filter "name=${container_name_list[dev]}")

	case "$1" in
		kill)
			if [ ! -z "$cid" ]
			then
				docker kill "$cid"
			fi
			;;
		php)
			case "$2" in
				prompt)
					session-docker-run-or-exec "$cid" php -d auto_prepend_file=vendor/autoload.php -a
					;;
				syntax)
					session-docker-run-or-exec "$cid" composer syntax
					;;
				*)
					session-docker-run-or-exec "$cid" "$@"
			esac
			;;
		*)
			session-docker-run-or-exec "$cid" "$@"
	esac
}

session-docker-run-or-exec()
{
	local -r cid="$1"; shift

	if [ -z "$cid" ]
	then
		docker build --target dev -t "${image_name_list[dev]}" -f Dockerfile .
		docker run -it --rm \
			--env-file "$envfile" \
			-v$PWD:/home/anvil \
			--name "${container_name_list[dev]}" \
			"${image_name_list[dev]}" \
			"$@"
	else
		docker exec -it \
			-u "$(id -u):$(id -g)" \
			"${container_name_list[dev]}" \
			"$@"
	fi
}

session-main "$@"
